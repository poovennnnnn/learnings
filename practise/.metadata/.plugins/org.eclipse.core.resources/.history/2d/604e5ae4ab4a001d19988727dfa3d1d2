package com.pooven.filter;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

import com.pooven.util.JwtUtil;

@Component
public class SecurityFilter extends OncePerRequestFilter {
	
	
	@Autowired
	private UserDetailsService userDetailsService;
	
	
	@Autowired
	private JwtUtil jwtUtil;


	@Override
	protected void doFilterInternal(
			HttpServletRequest request,
			HttpServletResponse response, 
			FilterChain filterChain)
			throws ServletException, IOException {
		
		//1 . read token from auth header from the request object
		String token = request.getHeader("Authorization");
		
		if(token !=null) {
			
			//getting username form the JWT token
			String username = jwtUtil.getUsername(token);
			
			//validate username and and security authentication context
			if(username !=null && SecurityContextHolder.getContext().getAuthentication() == null) {
				
				//now get the username from the database
				//compare token userame with the DB username
				UserDetails user = userDetailsService.loadUserByUsername(username);
				
			}
		}
		
		
		
		
		
		
	}

}
